title ++**Ablauf zum Einlösen von E-Rezepten mit eHealth-CardLink und optionalem ApoShop **++

actor Nutzer

participant App
participant "eHealth-CardLink" as CL
participant "AVS" as AVS
participant "ApoShop" as AS
participant "Konnektor" as Konnektor
participant "IDP-Dienst" as IDP
participant "FD_eRp" as FD_eRp


entryspacing 0.6

App <-> AVS: Schritte (0)-(7) gemäß eHealth-CardLink-Basisablauf

note over Nutzer, FD_eRp#lightgreen:**Phase 1** - Aufbau der Verbindung zum E-Rezept-Fachdienst (FD_eRp)

AVS <-> IDP: 8: beim IDP-Dienst authentifizieren, um verschlüsseltes ID-Token und Access-Token zu erhalten
AVS <-> FD_eRp: 9: Etabliere Kanal zur VAU des FD_eRp

note over Nutzer, FD_eRp#lightgreen:**Phase 2** - Auslesen der verfügbaren E-Rezepte für geprüfte eGK aus FD_eRp 


AVS -> FD_eRp: 10: **GET /Task?pnw**=<xyz>
FD_eRp --> AVS: 11: 200: Bundle(Task, Task ...)
AVS -> AVS: 12. Dekodiere Bundle 
loop für alle verfügbaren E-Rezepte
AVS -> FD_eRp: 13. **GET /Task/<id>?ac**=...
FD_eRp --> AVS: 14. 200: (secret, P7-MIME(MedicationReference))
AVS->AVS: 15. Dekodiere P7-MIME und erzeuge JSON-basierte E-Rezept-Informationen 
end

note over Nutzer, FD_eRp#lightgreen:**Phase 3** - Bereitstellen der E-Rezept-Informationen für Nutzer und Auswahl der zu dispensierenden E-Rezepte

App -> CL: 16. Liste der verfügbaren E-Rezepte anfordern (**requestPrescriptionList**)

CL -> AVS: 17. Liste der verfügbaren E-Rezepte anfordern (**requestPrescriptionList**)

AVS -> CL: 18. Liste mit E-Rezept-Informationen (**availablePrescriptionLists**)
CL -> App: 19. Liste mit E-Rezept-Informationen (**availablePrescriptionLists**)
App -> Nutzer: 20. Zeige verfügbare "E-Rezepte" 
Nutzer --> App: 21. Wähle zu dispensierende E-Rezepte 

alt case 1 Übergabe der Steuerung an ApoShop
App -> AS: 22. Übergabe der Steuerung an ApoShop
else case 2 Keine Übergabe der Steuerung an ApoShop
App --> CL: 23. Ausgewählte E-Rezepte (**selectedPrescriptionList**)
CL --> AVS: 24. Ausgewählte E-Rezepte (**selectedPrescriptionList**)

opt #lightgreen
AVS -> AVS: 25. optionale Transformation für alternative Schnittstellen
end

AVS-> CL: 26. Rückmeldung des Empfangs (**selectPrescriptionListResponse**)
CL-> App: 27. Rückmeldung des Empfangs (**selectPrescriptionListResponse**)
end

opt Sofern Steuerung über ApoShop erfolgt ist

AS -> AVS: 28. Ausgewählte E-Rezepte (**selectedPrescriptionList**)
AVS --> AS: 29. Rückmeldung des Empfangs (**selectPrescriptionListResponse**)
end

note over Nutzer, FD_eRp#lightgreen:**Phase 4** - Verbindliche Zuweisung der zu dispensierenden E-Rezepte an Apotheke

loop für alle zu dispensierenden E-Rezepte
AVS -> FD_eRp: 30. **POST /Task/<id>?$accept?ac**=...
FD_eRp --> AVS: 31. 200: Bundle(Task,P7-Container)
AVS -> AVS: 32. Dekodiere Nachricht und speichere secret
end

note over Nutzer, FD_eRp#lightgreen:**Phase 5** - Signaturvalidierung, Dispensierung des E-Rezepts und Abschluss der Transaktion

opt #lightgreen Bei verteiltem AVS
AVS->AVS: 33. optionale Abläufe bei verteiltem AVS
end

loop für alle zu dispensierenden E-Rezepte
AVS -> Konnektor: 34. **VerifyDocument** (P7-Container)
Konnektor --> AVS: 35. Signaturstatus (**VerifyDocumentResponse**)
AVS->AVS: 36. Extrahiere FHIR-basierte E-Rezept-Nutzdaten aus P7-Container
AVS->AVS: 37. Abgabe vorbereiten und MedicationDispense erzeugen
AVS->FD_eRp: 38. **POST /Task/<id>$close?secret=...ac=...MedicationDispense** 
FD_eRp --> AVS: 39. signierte Quittung
AVS -> AVS: 40. Protokollieren
end
AVS -> Nutzer: 41. E-Rezept(e) beliefern